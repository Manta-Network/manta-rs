[package]
name = "manta-pay"
version = "0.4.0"
edition = "2021"
authors = ["Manta Network <contact@manta.network>"]
readme = "README.md"
license-file = "LICENSE"
repository = "https://github.com/Manta-Network/manta-rs"
homepage = "https://github.com/Manta-Network"
documentation = "https://github.com/Manta-Network/manta-rs"
categories = [""]
keywords = [""]
description = "The Manta-Pay protocol and implementaion."
publish = false

[package.metadata.docs.rs]
# To build locally:
# RUSTDOCFLAGS="--cfg doc_cfg" cargo +nightly doc --all-features --open
all-features = true
rustdoc-args = ["--cfg", "doc_cfg"]

[badges]
is-it-maintained-issue-resolution = { repository = "Manta-Network/manta-rs" }
is-it-maintained-open-issues = { repository = "Manta-Network/manta-rs" }
maintenance = { status = "actively-developed" }

[[bench]]
name = "main"
harness = false

[[bin]]
name = "generate_parameters"
required-features = ["arkworks", "test"]

[features]
# Enable Arkworks Backend
arkworks = [
    "ark-bls12-381",
    "ark-crypto-primitives",
    "ark-ec",
    "ark-ed-on-bls12-381",
    "ark-ff",
    "ark-r1cs-std",
    "ark-relations",
    "ark-serialize",
    "ark-std",
]

# Enable Groth16 ZKP System
groth16 = ["arkworks", "ark-groth16"]

# TODO: Enable PLONK ZKP System
# TODO: plonk = ["zk-garage-plonk"]

# Testing Frameworks
test = [
    "indexmap",
    "manta-accounting/parallel",
    "manta-accounting/test",
    "manta-crypto/test",
    "parking_lot",
    "rayon",
]

# Simulation Framework
simulation = ["rand", "statrs"]

# Standard Library
std = ["manta-accounting/std", "manta-util/std"]

[dependencies]
aes-gcm = { version = "0.9.4", default-features = false, features = ["aes", "alloc"] }
ark-bls12-381 = { version = "0.3.0", optional = true, default-features = false, features = ["curve"] }
ark-crypto-primitives = { version = "0.3.0", optional = true, default-features = false, features = ["r1cs"] }
ark-ec = { version = "0.3.0", optional = true, default-features = false }
ark-ed-on-bls12-381 = { version = "0.3.0", optional = true, default-features = false, features = ["r1cs"] }
ark-ff = { version = "0.3.0", optional = true, default-features = false }
ark-groth16 = { version = "0.3.0", optional = true, default-features = false }
ark-r1cs-std = { version = "0.3.1", optional = true, default-features = false }
ark-relations = { version = "0.3.0", optional = true, default-features = false }
ark-serialize = { version = "0.3.0", optional = true, default-features = false }
ark-std = { version = "0.3.0", optional = true, default-features = false }
bip32 = { version = "0.3.0", default-features = false, features = ["bip39", "secp256k1"], optional = true }
blake2 = { version = "0.10.0", default-features = false }
derivative = { version = "2.2.0", default-features = false }
generic-array = { version = "0.14.4", default-features = false }
indexmap = { version = "1.8.0", default-features = false, optional = true }
manta-accounting = { path = "../manta-accounting", default-features = false }
manta-crypto = { path = "../manta-crypto", default-features = false }
manta-util = { path = "../manta-util", default-features = false }
parking_lot = { version = "0.11.2", optional = true, default-features = false }
rand = { version = "0.8.4", optional = true }
rand_chacha = { version = "0.3.1", default-features = false }
rayon = { version = "1.5.1", optional = true, default-features = false }
scale-codec = { package = "parity-scale-codec", version = "2.3.1", default-features = false, features = ["derive"] }
statrs = { version = "0.15.0", optional = true, default-features = false }
tungstenite = { version = "0.16.0", optional = true, default-features = false, features = ["native-tls"] }
# TODO: zk-garage-plonk = { package = "plonk", git = "https://github.com/zk-garage/plonk", optional = true, default-features = false }

[dev-dependencies]
criterion = "0.3.5"
manta-accounting = { path = "../manta-accounting", features = ["test"] }
manta-crypto = { path = "../manta-crypto", features = ["test"] }
manta-pay = { path = ".", features = ["arkworks", "bip32", "groth16", "std", "test"] }
rand = "0.8.4"
tempfile = "3.2.0"
